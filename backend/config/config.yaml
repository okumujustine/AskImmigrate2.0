#llm: gpt-4o-mini
#llm: llama3-8b-8192
llm: gemini-2.5-flash

vectordb:
  provider: "chromadb"
  threshold: 0.6
  n_results: 3

memory_strategies:
  trimming_window_size: 4 # Number of messages to keep in trimming strategy (4 would be 2 pairs of Q/A)
  summarization_max_tokens: 800 # Max tokens before summarization kicks in


reasoning_strategies:
  # Map each agent to a strategy code
  per_agent:
    manager_node: "CoT"
    synthesis_node: "ReAct"
    tools: "ReAct"
    rag_retrieval_node: "CoT"
    reviewer_node: "Self-Ask"

  # Define each reasoning strategy in full
  definitions:
    CoT: |
      Use this systematic approach to provide your response:
      1. Break down the problem into smaller steps
      2. Address each step systematically
      3. Show your reasoning for each step
      4. Then provide your final conclusion

    ReAct: |
      Use this systematic approach to provide your response:
      1. Thought: What approaches could I take to solve this?
      2. Action: Choose and implement the best approach
      3. Observation: What happened? What did I learn?
      4. Reflection: Do I have enough information to provide my final answer, or should I try a different approach?

      (Repeat steps 1â€“4 as needed)

      Then provide your final answer.

    Self-Ask: |
      Use this systematic approach to provide your response:
      1. Break the main question into smaller sub-questions.
      2. Answer each sub-question thoroughly.
      3. Then, based on those answers, synthesize a clear and thoughtful final response.

# (Optional) Which agents use web search, PDF parsing, or calculation
tools_enabled:
  manager_node: [rag_retriever]
  rag_retriever_node: []
  tool: [rag_retriever, web_search_tool, fee_calculator_tool]
  synthesis_node: [rag_retriever, web_search_tool, fee_calculator_tool]
  Reviewer_node: [fee_calculator_tool]

# Performance optimizations
performance:
  enable_tool_caching: true
  enable_rag_caching: true
  parallel_tool_execution: false  # Set to true if tools are independent
  max_concurrent_tools: 2
  timeout_seconds: 30
  cache_ttl_seconds: 300  # 5 minute cache TTL